import { useState } from "react";
import { Vulnerability } from "@shared/schema";
import { getSeverityColorClasses, getVulnerabilityTypeIcon, highlightLines } from "@/lib/utils";
import { AlertCircle, AlertTriangle, BarChart } from "lucide-react";

interface VulnerabilityCardProps {
  vulnerability: Vulnerability;
  contractCode: string;
}

export default function VulnerabilityCard({ vulnerability, contractCode }: VulnerabilityCardProps) {
  const [isDetailsOpen, setIsDetailsOpen] = useState(false);
  const colorClasses = getSeverityColorClasses(vulnerability.severity);
  
  // Get the icon component based on vulnerability type
  const IconComponent = () => {
    const iconType = getVulnerabilityTypeIcon(vulnerability.type);
    switch (iconType) {
      case 'CircleAlert':
        return <AlertCircle className={`h-5 w-5 ${colorClasses.icon} mr-2`} />;
      case 'AlertTriangle':
        return <AlertTriangle className={`h-5 w-5 ${colorClasses.icon} mr-2`} />;
      case 'BarChart':
        return <BarChart className={`h-5 w-5 ${colorClasses.icon} mr-2`} />;
      default:
        return <AlertCircle className={`h-5 w-5 ${colorClasses.icon} mr-2`} />;
    }
  };
  
  // Extract the vulnerable code snippet
  const extractCodeSnippet = () => {
    const lines = contractCode.split('\n');
    return lines
      .slice(Math.max(0, vulnerability.lineStart - 1), vulnerability.lineEnd)
      .join('\n');
  };
  
  return (
    <div className={`bg-white rounded-lg shadow-md overflow-hidden border-l-4 ${colorClasses.border}`}>
      <div className="p-4">
        <div className="flex justify-between items-start mb-2">
          <div className="flex items-center">
            <IconComponent />
            <h4 className="font-medium">{vulnerability.name}</h4>
          </div>
          <span className={`px-2 py-1 text-xs font-medium rounded-full ${colorClasses.bg} ${colorClasses.text}`}>
            {vulnerability.severity.charAt(0).toUpperCase() + vulnerability.severity.slice(1)}
          </span>
        </div>
        
        <p className="text-sm text-gray-600 mb-3">{vulnerability.description}</p>
        
        <div className="flex justify-between items-center">
          <span className="text-xs text-gray-500">
            Line: {vulnerability.lineStart}-{vulnerability.lineEnd}
          </span>
          <button 
            className="text-primary text-sm flex items-center focus:outline-none"
            onClick={() => setIsDetailsOpen(!isDetailsOpen)}
          >
            <span>{isDetailsOpen ? "Hide Details" : "Show Details"}</span>
            <svg 
              xmlns="http://www.w3.org/2000/svg" 
              className="h-4 w-4 ml-1" 
              viewBox="0 0 20 20" 
              fill="currentColor"
            >
              <path 
                fillRule="evenodd" 
                d={isDetailsOpen 
                  ? "M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" 
                  : "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                } 
                clipRule="evenodd" 
              />
            </svg>
          </button>
        </div>
      </div>
      
      {isDetailsOpen && (
        <div className="px-4 pb-4 border-t border-gray-100 pt-3 mt-2">
          <div className="mb-3">
            <h5 className="text-sm font-medium mb-2">Vulnerable Code</h5>
            <div className="bg-gray-800 rounded-md overflow-hidden">
              <pre className="line-numbers code-font text-xs p-3 overflow-auto">
                <code className="language-solidity">
                  {extractCodeSnippet()}
                </code>
              </pre>
            </div>
          </div>
          
          <div className="mb-3">
            <h5 className="text-sm font-medium mb-2">Impact</h5>
            <p className="text-sm text-gray-600 whitespace-pre-line">{vulnerability.impact}</p>
          </div>
          
          <div>
            <h5 className="text-sm font-medium mb-2">Recommended Fix</h5>
            <p className="text-sm text-gray-600 whitespace-pre-line">{vulnerability.recommendations}</p>
          </div>
        </div>
      )}
    </div>
  );
}
